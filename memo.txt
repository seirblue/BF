[수평가운데정렬]
    : inline속성개체는 text-align:center;
    block속성개체는 margin: 0 auto;

[크기]
    text 기본크기 : 16px (body)
    html의 text 기본크기 : 100%
    em : 16*2=32px ex) 3em=16*3=48px
        부모요소의 값에 입력값만큼 *됨
        부모요소의 값을 수정하면 자식요소도 같이 적용됨
        -> 이 때는 특정 자식요소에 따로 지정하고싶으면 해당 자식요소에만 px로 지정, %로 하면 또 똑같이 부모요소의 값의 영향을 받음
    rem : 최상위요소에 적용됨 (html)

[border]
    border: none
        아무것도 지정하지 않은 상태
    border: solid
        끊김이 없는 실선
    border: dashed
        끊김이 있는 점선
    border: dotted
        원 형태의 점선
    border: double
        solid의 두배
    border: mix
        최대 4가지의 위 오른쪽 아래 왼쪽 순서대로 스타일이 적용됨
    --입체적인 표현을 주는것--
    border: groove

    border: ridge

    border: inset

    border: outset

    display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
    몇줄 이상일 때 말줄임표 하는방법

[BG]
    높이, 넓이값이 없으면 적용 X
    기본 포지션이 왼쪽 상단 (left, top)
    큰 비율에 맞출때는 cover, 작은 비율에 맞출때는 contain
    cover와 contain을 주로 사용한다.

    padding: 5000px;
                background-image: url(/images/photo1.jpg);
                background-position: center;
                background-size: 500px;
                background-repeat: no-repeat;
                background-attachment: fixed;
    이 경우 스크롤은 padding때문에 생기지만 스크롤을 하더라도 디바이스의 스크린에 고정되게함
    center로 했기때문에 가운데에 고정되어있음

    height: 100px;
            background: url(/images/photo1.jpg) left top/50px no-repeat, 
            url(/images/photo2.jpg) right bottom/50px no-repeat, 
            url(/images/photo3.jpg) center/50px no-repeat;
    이렇게도 가능
    background-image: url(/images/photo1.jpg),
            url(/images/photo2.jpg),
            url(/images/photo3.jpg);
            background-position: left top, right bottom, center;
            background-size: 50px;
            background-repeat: no-repeat;
    이렇게도 가능

[BOX]
    박스의 크기 = 가로크기 + padding + border
    (box-sizing : width, height 값에 padding 값이나 border 값은 포함되지 않게 하는 속성)

[시멘틱요소]
    <div></div>로 id나 class를 지정해서 사용해도 되지만 HTML5가 되면서 div 대신에 의미 부여가 된 시멘틱요소를 사용할 수 있음. 
    (여럿이 작업할 때도 시인성이 좋아서 사용하는 편이 좋음)

    <header></header>
        : 1. HTML 문서의 헤더 영역을 의미하는 태그로 제목이나 내비게이션, 검색 등의 내용들을    포함할 수 있다. 
        2. 텍스트, 인라인 요소, 블록 레벨 요소들 포함할 수 있지만 <header>, <footer>태그는 포함할 수 없다.
    <nav></nav>
        : 1. HTML 문서의 메인 메뉴나 목차 등을 정의해 주는 태그이다. 
        2. 텍스트, 인라인 요소, 블록 레벨 요소를 포함할 수 있다.
    <section></section>
        : 1. HTML 문서에서 맥락이 같은 요소들을 주제별로 그룹화해주는 태그이며 섹션 주제에 대한 제목요소(<h2>~<h6>)를 포함하는 것이 좋다. 
        2. 텍스트, 인라인 요소, 블록 레벨 요소를 포함할 수 있다.
    <article></article>
        : 1. HTML 문서 내에서 독립적으로 배포 또는 재사용이 가능한 게시물, 뉴스 기사, 블로그 포스팅 등을 의미하는 태그이며 제목요소(<h2>~<h6>)를 포함하는 것이 좋다. 
        2. 텍스트, 인라인 요소, 블록 레벨 요소를 포함할 수 있다.

    section 안에 article이 포함될 수 있고, article 안에 section이 포함될 수 있다.

    <aside></aside>
        : 1. 메인 콘텐츠와 직접적으로 관련이 없는 영역을 의미하는 태그이며 HTML 문서의 오른쪽이나 왼쪽의 사이드 메뉴나 광고 등의 영역으로 사용된다. 
        2. 텍스트, 인라인 요소, 블록 레벨 요소를 포함할 수 있다. 
    <footer></footer>
        : 1. HTML 문서의 푸터 영역을 의미하는 태그로 섹션 작성자나 저작권에 대한 정보, 관련된 문서의 링크를 포함할 수 있다. 
        2. 텍스트, 인라인 요소, 블록 레벨 요소들 포함할 수 있지만 <header>, <footer>태그는 포함할 수 없다.
details : 세부적으로 세부 내용이 나오는 것
summary

[table]
1. 표를 정의할 때 사용하는 태그이며, 행(Row)과 열(Column)의 2차원 정보로 구성되어 있다. 2. 자식 요소로 반드시 <tr>태그를 정의해 주어야 하며 <table>-><tr>-><td>순으로 마크업해야 한다. 
3. <tr>태그는 <table>태그의 자식 요소로 표에서 행(Row)을 정의할 때 사용하는 태그이다. 
4. <td>태그는 <tr>태그의 자식 요소로 표에서 얼(Column)을 정의할 때 사용하는 태그이다. 
5. <th>태그는 제목 역할을 하는 셀을 정의할 때 사용하는 태그이다.
6. 표의 내용을 기준으로 제목 영역<thead>, 본문 영역<tbody>, 열의 요약 영역 <tfoot>으로 구분하여 정의할 수 있다.
7. 표는 <tr>태그처럼 <td>나 <th> 태그들을 가로로 묶는 행(Row) 그룹은 있지만 세로로 묶는 열(Column) 그룹은 없다
※ border-collapse: collapse
<td>요소들의 위, 아래, 좌, 우 테두리선이 서로 겹쳤을 때 하나의 테두리선으로 표현해 준다.

display: table을 주고 필요한 요소에 display: table-cell을 주면 vertical-align이 가능해진다

<수평 정렬은 width값이 존재해야 가능>
ex) width: 400px margin 0 auto;
* width값을 모르는 경우엔 부모요소에 text-align:center;
    정렬 할 자식요소에 display: inline-block; 하면 가능

<수직 정렬은 문자>
한 줄의 문자로 된 경우 line-height: 높이값
* 상위요소에 display: talbe / 하위요소에 display: table-cell: vertical-align: middle; 하위요소에 width값과 height값 지정 (크기가 없으면 적용 안됨)

[<form></form>]
1. 온라인 서식(검색, 로그인, 회원가입 등)에서 입력한 값들을 처리하는 프로그램으로 전송할 때 사용하는 태그이다. 
2. 텍스트, 인라인 요소, 블록 레벨 요소를 포함할 수 있다. 일반적으로 사용자 입력에 관련된 태그들을 포함한다. 
3. form 태그에는 action 속성과 method 속성이 있다. action 속성은 서식에서 작성한 값을 처리하는 프로그램의 주소(URL)를 지정하며, method속성은 서식의 값들을 서버 프로그램에 어떤 방식으로 전달할 것인지를 정의한다. 전달 방식에는 get방식과 post방식이 있다

[<fieldset></fieldset>]
1. 양식 요소들을 그룹화할 때 사용하는 태그이다. 
2. 텍스트, 인라인 요소, 블록 레벨 요소를 포함할 수 있다. 
3. 그룹화 된 서식의 제목을 정의 할 수 있는 <legend> 태그를 자식요소로 포함한다.

[<input></input>]
1. 사용자로부터 데이터 값을 입력받기 위한 태그이다. 
2. type 속성값에 따라 다양한 폼 컨트롤을 생성할 수있다. 
3. 공통 속성으로 name, value 속성이 있다.

[<label></label>]
1. 사용자 입력 태그 <input>, <textarea>, <select> 들에 대한 제목을 정의하는 태그이다. 2. <label> 태그를 사용자 입력 태그의 제목으로 연결하기 위해서는 <label> 태그의 for 속성 값과 사용자 입력 태그의 id 속성 값을 동일하게 정의해야 한다. 
<label for="id"></label><input type="text" id="id">

**script를 많이 사용하면 페이지가 무거워짐. css로 할 수 있으면 최대한 구현하는게 좋음**